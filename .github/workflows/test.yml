name: Test

on:
  pull_request: {}
  push:
    branches: master
    tags: "*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        curl -sSL \
          "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        source "$HOME/.poetry/env"
        poetry config virtualenvs.in-project true
        poetry install
#        sudo apt install python3-bs4

    - name: Run checks
      run: |
        source "$HOME/.poetry/env"
        export PATH="$(pwd)/.venv/bin:$PATH"
        make test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies with pipenv
        run: |
          pip install pipenv
          pipenv install --deploy --dev

      - run: pipenv run isort --recursive --diff .
      - run: pipenv run black --check .
      - run: pipenv run flake8
#      - run: pipenv run mypy
      - run: pipenv run pytest --cov --cov-fail-under=50

  docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build docker image
        run: docker build . -t topalias:test

      - name: Smoke test docker image
        run: |
          docker run --rm topalias:test
